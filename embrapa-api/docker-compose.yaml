version: '3.9'

volumes:       
  prometheus_data: {}
  grafana_data: {}
  loki_data: {}
  postgres-embrapa-data: {}
  loki_wal_data: {}  

services:
  embrapa-db:
    container_name: embrapa-db
    image: postgres:16.8-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fiap-embrapa
    volumes:
      - postgres-embrapa-data:/var/lib/postgresql/data
      - ./migrations/local/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 30s
    networks:
      - embrapa-net

  pgbouncer:
    image: bitnami/pgbouncer
    container_name: pgbouncer
    environment:
      POSTGRESQL_USERNAME: fiap-embrapa-app
      POSTGRESQL_PASSWORD: fiap-embrapa-app
      POSTGRESQL_DATABASE: fiap-embrapa
      PGBOUNCER_DATABASE: fiap-embrapa
      PGBOUNCER_POOL_MODE: transaction
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: extra_float_digits
      POSTGRESQL_HOST: embrapa-db
    ports:
      - "6432:6432"
    depends_on:
      embrapa-db:
        condition: service_healthy
    networks:
      - embrapa-net

  embrapa-migrations:
    image: liquibase/liquibase:4.19.0
    container_name: embrapa-migrations
    depends_on:
      embrapa-db:
        condition: service_healthy
      pgbouncer:
        condition: service_started
    volumes:
      - ./migrations:/liquibase/changelog/
    command: --defaults-file=/liquibase/changelog/liquibase.properties update
    networks:
      - embrapa-net

  embrapa-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: embrapa-api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=pgbouncer
      - DB_PORT=6432
      - DB_USER=fiap-embrapa-app
      - DB_PASSWORD=fiap-embrapa-app
      - DB_NAME=fiap-embrapa
      - SECRET_KEY=your-secret-key-here
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      embrapa-db:
        condition: service_healthy
      pgbouncer:
        condition: service_started
      embrapa-migrations:
        condition: service_completed_successfully
    networks:
      - embrapa-net

# Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ${PWD}/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9091:9090"  # Changed port to avoid conflict
    networks:
      - embrapa-net

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    volumes:
      - ${PWD}/monitoring/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
      - loki_wal_data:/wal  # Add this line
    ports:
      - "3102:3100"  # Changed port to avoid conflict
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - embrapa-net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    volumes:
      - ${PWD}/monitoring/promtail/promtail-config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - embrapa-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ${PWD}/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ${PWD}/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ${PWD}/monitoring/grafana/config/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=qwe123
      - GF_SECURITY_ADMIN_PASSWORD=qwe123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/embrapa_monitoring.json
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      - embrapa-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    privileged: true  # Added for Podman compatibility
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8081:8080"  # Changed port to avoid potential conflicts
    networks:
      - embrapa-net

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@embrapa-db:5432/fiap-embrapa?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - embrapa-net

  pgbouncer_exporter:
    image: prometheuscommunity/pgbouncer-exporter:latest
    container_name: pgbouncer_exporter
    restart: always
    command:
      - '--pgBouncer.connectionString=postgres://fiap-embrapa-app:fiap-embrapa-app@pgbouncer:6432/pgbouncer?sslmode=disable'
      - '--web.listen-address=:9127'
      - '--web.telemetry-path=/metrics'
    ports:
      - "9127:9127"
    depends_on:
      - pgbouncer
    networks:
      - embrapa-net

  
networks:
  embrapa-net: